#!/bin/bash

#TPV contains i.e. 2018-04-05T11:40:07.000Z
#fork, as it's blocking!

syncFlag="/tmp/syncOK"
MAXDELTA=10;
oneYear=31536000;

if [ -f "$syncFlag" ]
then
  logger -t GPSTIMESYNC "Already synced, skipping"
  exit 0
fi
gpsTimeString=$(gpspipe 127.0.0.1:2947 -w -n 5 | grep TPV | grep -m 1 time)
if [ -n "$gpsTimeString" ]
then
  gpsDT=$(echo "$gpsTimeString" | sed -r 's/.*"time":"([^"]*)".*/\1/')
  secGPS=$(date +%s --date="$gpsDT")
  if [ $? -ne 0 ]
  then
    exit 1;
  fi
  locDT="$(date -u +%Y-%m-%dT%T).000Z"
  secLOC=$(date +%s --date="$locDT")
  logger -t GPSTIMESYNC "UTC datetime: GPS $gpsDT  / Local $locDT"
  deltaT=$((secGPS - secLOC))
  if [ $deltaT -lt 0 ]
  then
    deltaT=$((-deltaT))
  fi
  if [ $delta -gt $oneYear ]
  then
    logger -t GPSTIMESYNC "Difference between satellite and local time too big: $delta sec. Skipping sync"
    exit 0
  fi
  if [ -f "$syncFlag" ]
  then
    logger -t GPSTIMESYNC "Already synced, skipping"
    exit 0
  fi
  if [ $deltaT -gt $MAXDELTA ]
  then
    logger -t GPSTIMESYNC "Local vs GPS times differ by $deltaT sec(s), sync needed"
    #echo "delta is $deltaT sync needed"
    date --set="$gpsDT"
    if [ $? -eq 0 ]
    then
      /usr/local/conf/clocks save
      logger -t GPSTIMESYNC "Time Sync success"
      echo "gps" > "$syncFlag"
    else
      exit 1
    fi
  else
    logger -t GPSTIMESYNC "Difference is $deltaT sec., sync NOT needed"
  fi
else
  exit 1
fi

