#!/bin/bash
# ;;/;&
# use exit code 64 to reboot system on exit
notify(){
  logger -t $app "$*"
  echo "$*"
}


check_update(){
  if [ $updated -eq 0 ]
  then
    apt-get update
    if [ $? -eq 0 ]
    then
      updated=1    
    else
      notify "Update to v.$1 failed in updating packages"
      exit 1
    fi
  fi

}

app=SYSUPDATE
if [ "$(id -u)" != "0" ]; then
	notify "Not root"
	exit 1
fi
etver=$(cat /etc/etransver)
updated=0
case "$etver" in
20180505)
#  does not exist, just for fallthrough
#  notify "Updating to v.20180606"
#  check_update 20180606
#  echo "20180606" > /etc/etransver
  ;&
20180613)
  notify "Updating to v.20180911"
  check_update 20180911
  apt-get install -y pigpio python-pigpio python3-pigpio && sed -i -- 's/pigpiod -l/pigpiod/g' /lib/systemd/system/pigpiod.service && systemctl enable pigpiod.service && systemctl start pigpiod.service && sed -i -- 's/20180613/20180911/g' /etc/etransver
  ;&
20180911)
  newVer="20181005"
  notify "Updating to $newVer"
#  check_update $newVer
  myVal=$(cat /proc/cpuinfo | grep -Po '([0-9,a-f]{16})')
  #if [ "0000000019438c0c" = "$myVal" ]
  #then
    check_update "$newVer"
    sed -i -- 's/maxfail 3/maxfail 5/g' /usr/local/bin/xgconn
    tmpScript=$(wget --no-cache -qO- https://raw.githubusercontent.com/D2Edev/et2/master/syncByGps) && echo "$tmpScript" > /usr/local/bin/gpstimesync
    apt-get install -y ntpdate
    if [ $? -eq 0 ]
    then
      wget -P /usr/local/bin/ https://raw.githubusercontent.com/D2Edev/et2/master/syncByNtp && chmod +x /usr/local/bin/syncByNtp && sed -i '7 a syncByNtp &' /usr/local/bin/etupdate && systemctl stop systemd-timesyncd.service && systemctl disable systemd-timesyncd.service
      tmpScript=$(wget --no-cache -qO- https://raw.githubusercontent.com/D2Edev/et2/master/rc.local) && echo "$tmpScript" > /etc/rc.local
      sed -i -- 's/20180911/20181005/g' /etc/etransver
    fi
  #fi
  exit 64
  ;;
*)
  notify "Unknown local version: $etver. Exit"
  exit 1  
esac
exit 0
